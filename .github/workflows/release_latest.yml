name: release latest with all library versions

on:
  push:
    branches: [ "main", "os_extention" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest      

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        cpu: ["x86_64"]
        platform: ["debug"]

    steps: 
    - uses: actions/checkout@v4

    - name: Generate build directory name
      id: build
      run: echo "dir=build_${{ matrix.platform }}_${{ matrix.cpu }}" >> $GITHUB_OUTPUT

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -B ${{ steps.build.outputs.dir }}
        -DCMAKE_CXX_COMPILER=clang++
        -DCMAKE_C_COMPILER=clang
        -DDANDELION_PLATFORM=${{ matrix.platform }}
        -DARCHITECTURE=${{ matrix.cpu }}

    - name: Build
      run: cmake --build ${{ steps.build.outputs.dir }}

    - name: Install
      run: cmake --install ${{ steps.build.outputs.dir }}

    - name: Compress
      shell: bash
      working-directory: ${{ steps.build.outputs.dir }}
      run: tar -czf "dandelion_sdk_${{matrix.platform}}_${{matrix.cpu}}.tar.gz" dandelion_sdk
    
    - name: Add to release
      shell: bash
      run: gh release upload latest "${{ steps.build.outputs.dir }}/dandelion_sdk_${{matrix.platform}}_${{matrix.cpu}}.tar.gz" --clobber
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}